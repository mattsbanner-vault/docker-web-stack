version: '3.5'

services:

  nginx:
    container_name: dev_nginx
    image: mattbanner/nginx:latest
    restart: unless-stopped
    depends_on:
      # - php56
      # - php70
      # - php71
      # - php72
      - php73
      # - php74
      - mongo-express
      - mailhog
      - redis-commander
      - phpmyadmin
      - portainer
    networks:
      - web
      - php
    ports:
      - ${NGINX_PORT}:80
    volumes:
      - ${VOLUME_PATH}/sites/:/var/www/
      - ./resources/configs/nginx/:/etc/nginx/admin-sites/

  # php56:
  #   container_name: dev_php-5.6
  #   image: nanoninja/php-fpm:5.6
  #   restart: unless-stopped
  #   networks:
  #     - php
  #   volumes:
  #     #      - "./etc/php/php.ini:/usr/local/etc/php/conf.d/php.ini"
  #     - ${VOLUME_PATH}/sites/:/web

  # php70:
  #   container_name: dev_php-7.0
  #   image: nanoninja/php-fpm:7
  #   restart: unless-stopped
  #   networks:
  #     - php
  #   volumes:
  #     #      - "./etc/php/php.ini:/usr/local/etc/php/conf.d/php.ini"
  #     - ${VOLUME_PATH}/sites/:/web

  # php71:
  #   container_name: dev_php-7.1
  #   image: nanoninja/php-fpm:7.1
  #   restart: unless-stopped
  #   networks:
  #     - php
  #   volumes:
  #     #      - "./etc/php/php.ini:/usr/local/etc/php/conf.d/php.ini"
  #     - ${VOLUME_PATH}/sites/:/web

  # php72:
  #   container_name: dev_php-7.2
  #   image: nanoninja/php-fpm:7.2
  #   restart: unless-stopped
  #   networks:
  #     - php
  #   volumes:
  #     #      - "./etc/php/php.ini:/usr/local/etc/php/conf.d/php.ini"
  #     - ${VOLUME_PATH}/sites/:/web

  php73:
    container_name: dev_php-7.3
    image: nanoninja/php-fpm:7.3.10
    restart: unless-stopped
    networks:
      - php
    volumes:
      #      - "./etc/php/php.ini:/usr/local/etc/php/conf.d/php.ini"
      - ${VOLUME_PATH}/sites/:/web

  # php74:
  #   container_name: dev_php-7.4
  #   image: nanoninja/php-fpm:7.4
  #   restart: unless-stopped
  #   networks:
  #     - php
  #   volumes:
  #     #      - "./etc/php/php.ini:/usr/local/etc/php/conf.d/php.ini"
  #     - ${VOLUME_PATH}/sites/:/web

  mailhog:
   container_name: dev_mailhog
   image: mailhog/mailhog:latest
   restart: always
   networks:
     - web
   ports:
     - ${MAILHOG_PORT}:1025
#     - 8025:8025

  mongo:
    image: mongo:4.2
    command: mongod --auth
    container_name: dev_mongo
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    networks:
      - web
    ports:
      - ${MONGO_PORT}:27017
    volumes:
      - ${VOLUME_PATH}/mongo/:/data/db

  mongo-express:
    image: mongo-express:0.54
    container_name: dev_mongo-express
    restart: unless-stopped
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_USER}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_PASSWORD}
    links:
      - mongo
    depends_on:
      - mongo
    networks:
      - web
#    ports:
#      - 8083:8081

  mysql:
   container_name: dev_mysql
   image: mysql:${MYSQL_VERSION}
   restart: always
   environment:
     - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
     - MYSQL_USER=${MYSQL_USER}
     - MYSQL_PASSWORD=${MYSQL_PASSWORD}
     - MYSQL_DATABASE=example
   networks:
     - web
   ports:
     - ${MYSQL_PORT}:3306
   volumes:
     - ${VOLUME_PATH}/mysql/:/var/lib/mysql/

  phpmyadmin:
   container_name: dev_phpmyadmin
   image: phpmyadmin/phpmyadmin:5.0.1
   restart: always
   networks:
     - web
   depends_on:
     - mysql
   external_links:
     - mysql:db
  #     ports:
  #       - '8082:80'

  redis:
   container_name: dev_redis
   image: bitnami/redis:5.0.6
   restart: always
   environment:
     - REDIS_PASSWORD=${REDIS_PASSWORD}
   networks:
     - web
   ports:
     - ${REDIS_PORT}:6379
   volumes:
     - ${VOLUME_PATH}/redis/:/data

  redis-commander:
   container_name: dev_redis-commander
   image: rediscommander/redis-commander:latest
   restart: always
   environment:
     - REDIS_HOST=redis
     - REDIS_PASSWORD=${REDIS_PASSWORD}
   depends_on:
     - redis
   networks:
     - web
#   ports:
#     - 8081:8081

  portainer:
   container_name: dev_portainer
   image: portainer/portainer:latest
   restart: always
   networks:
     - web
  #     ports:
  #       - 9000:9000
   volumes:
     - ${VOLUME_PATH}/portainer/:/data
     - /var/run/docker.sock:/var/run/docker.sock

networks:

  web:
    name: web
    driver: bridge

  php:
    name: php
    driver: bridge